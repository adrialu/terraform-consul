#!/usr/bin/env python3

# Copyright (c) 2018-2019 Adrian L Lange
# Copyright (c) 2018-2019 Vetle T Moen
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import re
import json
import subprocess

# get the inventory from the terraform state file
p = subprocess.Popen(
	['terraform-inventory', '--list', '../terraform/terraform.tfstate'],
	stdout=subprocess.PIPE,
	stderr=subprocess.PIPE)
out, err = p.communicate()

# get a inventory json list from the output
inventory = json.loads(out.strip().decode())

# remove most occurances of the local IP for the manager instance
for ip in inventory['manager']:
	if ip.startswith('192.168.1.'):
		inventory['manager'].remove(ip)

for ip in inventory['type_openstack_compute_instance_v2']:
	if ip.startswith('192.168.1.'):
		inventory['type_openstack_compute_instance_v2'].remove(ip)

for ip in inventory['all']['hosts']:
	if ip.startswith('192.168.1.'):
		inventory['all']['hosts'].remove(ip)

# remove occurances of the haproxy floating IP
for ip in inventory['proxy']:
	if ip.startswith('10.212.'):
		inventory['proxy'].remove(ip)
		inventory['all']['hosts'].remove(ip)

# get the floating IP for the manager instance
manager_ip = inventory['manager'][0]

# replace the manager's internal IP with it's public IP
inventory['manager.0'][0] = manager_ip
inventory['all']['vars']['manager'] = manager_ip

# remove unneccessary lists in inventory
del inventory['type_openstack_compute_floatingip_associate_v2']
del inventory['type_openstack_compute_instance_v2']

# read the contents of the ssh.cfg file
with open('ssh.cfg', 'r') as file:
	contents = file.read()

# replace the manager's IP with the one from the current inventory
with open('ssh.cfg', 'w') as file:
	file.write(re.sub(r'10.212.\d+.\d+', manager_ip, contents))

# dump the inventory as a json string
print(json.dumps(inventory, indent=4))
